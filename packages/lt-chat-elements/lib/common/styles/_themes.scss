@import "colors";
// Background Colors
$color-background-primary: #FF5732;
$color-background-secondary: rgba(4, 38, 73, .3);
$color-background-terciary: $palette-pink-700;
// Text colors
$color-text-dark-primary: rgb(4, 38, 73);
$color-text-light-primary: rgb(255, 255, 255);
$color-text-accent-primary: #FF5732;
$color-text-secondary: $palette-indigo-700;
$color-text-terciary: $palette-pink-700;

// Fonts
$fontUnit: 1px; // 1pt - 0.75px
$unit: 8px;

$preferred-font: 'Nimbus sans-serif', 'Sans', 'Helvetica', Arial;
$font-size-default: calc(1 * #{$fontUnit});
$font-size-small: calc(10 * #{$fontUnit});// 10pt
$font-size-caption: calc(12 * #{$fontUnit}); // 12pt
$font-size-footnote: calc(14 * #{$fontUnit}); // 14pt
$font-size-body: calc(16 * #{$fontUnit}); // 16pt
$font-size-subhead: calc(18 * #{$fontUnit}); // 18pt
$font-size-title: calc(20 * #{$fontUnit}); // 20pt
$font-size-headline: calc(24 * #{$fontUnit}); // 24pt
$font-size-jumbo: calc(44 * #{$fontUnit}); // 44pt
$font-size-mega: calc(56 * #{$fontUnit}); // 56pt

$font-weight-ultra-thin: 100;
$font-weight-thin: 300;
$font-weight-normal: 300;
$font-weight-medium: 500;
$font-weight-semi-bold: 600;
$font-weight-bold: 700;
$font-weight-condensed-bold: 900;

$shadow-2p: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
$shadow-3p: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 3px 3px -2px rgba(0, 0, 0, 0.2), 0 1px 8px 0 rgba(0, 0, 0, 0.12);
$shadow-4p: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2);
$shadow-6p: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.2);
$shadow-8p: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2);
$shadow-16p: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2);

$shadow-key-umbra-opacity: 0.2;
$shadow-key-penumbra-opacity: 0.14;
$shadow-ambient-shadow-opacity: 0.12;

$zdepth-shadow-1: 0 1px 6px rgba(0, 0, 0, 0.12), 0 1px 4px rgba(0, 0, 0, 0.24);
$zdepth-shadow-2: 0 3px 10px rgba(0, 0, 0, 0.16), 0 3px 10px rgba(0, 0, 0, 0.23);
$zdepth-shadow-3: 0 10px 30px rgba(0, 0, 0, 0.19), 0 6px 10px rgba(0, 0, 0, 0.23);
$zdepth-shadow-4: 0 14px 45px rgba(0, 0, 0, 0.25), 0 10px 18px rgba(0, 0, 0, 0.22);
$zdepth-shadow-5: 0 19px 60px rgba(0, 0, 0, 0.3), 0 15px 20px rgba(0, 0, 0, 0.22);

$animation-duration: 0.35s;
$animation-delay: calc(#{$animation-duration} / 5);
$animation-curve-fast-out-slow-in: cubic-bezier(0.4, 0, 0.2, 1);
$animation-curve-linear-out-slow-in: cubic-bezier(0, 0, 0.2, 1);
$animation-curve-fast-out-linear-in: cubic-bezier(0.4, 0, 1, 1);
$animation-curve-default: $animation-curve-fast-out-slow-in;

$z-index-highest: 300;
$z-index-higher: 200;
$z-index-high: 100;
$z-index-normal: 1;
$z-index-low: -100;
$z-index-lower: -200;

// disabled: (
//   color: rgba($color-background-primary, .3),
//   fontSize: $size,
//   fontWeight: $font-weight-normal,
// )
// primary: (
//   color: $color-background-primary,
//   fontSize: $font-size-body,
//   fontWeight: $font-weight-normal,
// )
// secondary: (
//   color: rgba($color-background-primary, .65),
//   fontSize: $font-size-body,
//   fontWeight: $font-weight-normal,
// )

// disabled: (
//   color: lighten($color, .3),
//   fontSize: $size,
//   fontWeight: $font-weight,
// ),
// primary: (
//   color: $color,
//   fontSize: $size,
//   fontWeight: $font-weight,
// ),
// secondary: (
//   color: darken($color, .65),
//   fontSize: $size,
//   fontWeight: $font-weight,
// ),
// trans: (
//   color: transparentize($color, .65),
//   fontSize: $size,
//   fontWeight: $font-weight,
// )

// @function generateColors ($color, $size, $font-weight) {
//   $map: (
//     disabled: (
//       color: rgba($color, .3),
//       fontSize: $size,
//       fontWeight: $font-weight,
//     ),
//     primary: (
//       color: $color,
//       fontSize: $size,
//       fontWeight: $font-weight,
//     ),
//     secondary: (
//       color: rgba($color, .65),
//       fontSize: $size,
//       fontWeight: $font-weight,
//     )
//   );
//
//   @return $map;
// }

@function set-text-color($color, $backgroundColor) {
  @if (lightness($backgroundColor) > 50) {
    @return #000; // Lighter backgorund, return dark color
  } @else {
    @return #FFF; // Darker background, return light color
  }
}

@function generateColors ($color, $size, $font-weight) {
  $map: (
    disabled: (
      color: rgba($color, .3),
      fontSize: $size,
      fontWeight: $font-weight,
    ),
    primary: (
      color: $color,
      fontSize: $size,
      fontWeight: $font-weight,
    ),
    secondary: (
      color: rgba($color, .65),
      fontSize: $size,
      fontWeight: $font-weight,
    ),
    trans: (
      color: transparentize($color, .65),
      fontSize: $size,
      fontWeight: $font-weight,
    )
  );

  @return $map;
}

$typographiesClasses : (
  body: (
    fontSize: $font-size-body,
    fontWeight: $font-weight-bold
  ),
  caption: (
    fontSize: $font-size-caption,
    fontWeight: $font-weight-bold
  ),
  footnote: (
    fontSize: $font-size-footnote,
    fontWeight: $font-weight-bold
  ),
  small: (
    fontSize: $font-size-small,
    fontWeight: $font-weight-bold
  ),
  headline: (
    fontSize: $font-size-headline,
    fontWeight: $font-weight-bold
  ),
  subhead: (
    fontSize: $font-size-subhead,
    fontWeight: $font-weight-bold
  ),
  title: (
    fontSize: $font-size-title,
    fontWeight: $font-weight-medium
  ),
  jumbo: (
    fontSize: $font-size-jumbo,
    fontWeight: $font-weight-bold
  ),
  mega: (
    fontSize: $font-size-mega,
    fontWeight: $font-weight-bold
  )
);

@function createTypographyMap($typographyObject, $colors) {
  $fontSize: map-get($typographyObject, 'fontSize');
  $fontWeight: map-get($typographyObject, 'fontWeight');
  $color-text-accent-primary: map-get($colors, 'color-text-accent-primary');
  $color-text-dark-primary: map-get($colors, 'color-text-dark-primary');
  $color-text-light-primary: map-get($colors, 'color-text-light-primary');
  $map: (
    normal: (
      accent: (
        generateColors($color-text-accent-primary, $fontSize, $font-weight-normal)
      ),
      dark: (
        generateColors($color-text-dark-primary, $fontSize, $font-weight-normal)
      ),
      light: (
        generateColors($color-text-light-primary, $fontSize, $font-weight-normal)
      )
    ),
    bold: (
      accent: (
        generateColors($color-text-accent-primary, $fontSize, $fontWeight)
      ),
      dark: (
        generateColors($color-text-dark-primary, $fontSize, $fontWeight)
      ),
      light: (
        generateColors($color-text-light-primary, $fontSize, $fontWeight)
      )
    )
  );
  @return $map;
}

@function generateTypography($colors) {
  $typographiesMap: ();

  @each $key, $value in $typographiesClasses {
    $map: ();
    $map: map-merge($map, ($key: createTypographyMap($value, $colors)) );
    $typographiesMap: map-merge($typographiesMap, $map);
  }
  @return $typographiesMap;
}

@function createTheme($colors) {
  $theme: ();
  $color-text-accent-primary: map-get($colors, 'color-text-accent-primary');
  $color-text-dark-primary: map-get($colors, 'color-text-dark-primary');
  $color-text-light-primary: map-get($colors, 'color-text-light-primary');
  $color-background-primary: map-get($colors, 'color-background-primary');
  $color-background-secondary: map-get($colors, 'color-background-secondary');

  $typographiesMap: generateTypography($colors);
  
  $theme: (
    palette: (
      common: (
        black: $color-black,
        white: $color-white,
        online: $palette-green-600,
        offline: $palette-red-600,
        sleeping: $palette-yellow-600,
      ),
      primary: (
        light: "#7986cb",
        main: $color-background-primary,
        dark: "#303f9f",
        contrastText: "#fff",
      ),
      secondary: (
        light: "#7986cb",
        main: $color-text-secondary,
        dark: "#303f9f",
        contrastText: "#fff",
      ),
      error: (
        light: "#e57373",
        main: "#f44336",
        dark: "#d32f2f",
        contrastText: "#fff",
      ),
      grey: (
        50: "#fafafa",
        100: "#f5f5f5",
        200: "#eeeeee",
        300: "#e0e0e0",
        400: "#bdbdbd",
        500: "#9e9e9e",
        600: "#757575",
        700: "#616161",
        800: "#424242",
        900: "#212121",
        A100: "#d5d5d5",
        A200: "#aaaaaa",
        A400: "#303030",
        A700: "#616161",
      ),
      divider: rgba($color-background-primary, .1),
      text: (
        primary: $color-text-dark-primary,
        secondary: rgba($color-text-dark-primary, .7),
        disabled: rgba($color-text-dark-primary, .3),
        hint: rgba($color-text-dark-primary, .3),
        hintSecondary: rgba(255, 255, 255, .65),
      ),
      background: (
        // primary: rgb(255, 87, 34),
        // secondary: rgba(94, 124, 139, .1),
        primary: $color-background-primary,
        secondary: $color-background-secondary
      ),
      action: (
        active: rgba($color-background-primary, .9),
        hover: rgba($color-background-primary, .08),
        selected: rgba($color-background-primary, .14),
        disabled: rgba($color-background-primary, .26),
        disabledBackground: rgba($color-background-primary, .12),
      ),
    ),
    shadows: (
      2p: $shadow-2p,
      3p: $shadow-3p,
      4p: $shadow-4p,
      6p: $shadow-6p,
      8p: $shadow-8p,
      16p: $shadow-16p,
    ),
    typography: (
      fontFamily: $preferred-font,
      fontSize: $font-size-default,
      weights: (
        fontWeightUltraThin: $font-weight-ultra-thin,
        fontWeightThin: $font-weight-thin,
        fontWeightNormal: $font-weight-normal,
        fontWeightMedium: $font-weight-medium,
        fontWeightSemibold: $font-weight-semi-bold,
        fontWeightBold: $font-weight-bold,
      ),
      classes: $typographiesMap,
    ),
    components: (
      // COMPONENTS STYLES
      conversationBox: (
        externalBackgroundColor: rgba(94, 124, 139, .1),
        internalBackgroundColor: rgba(255, 213, 0, .2),
        importantBackgroundColor: #fff6f4,
      ),
      loader: (
        background-color: #fc5830,
      )
    )
  );

  @return $theme;
};

$defaultColors: (
  color-text-accent-primary: $color-text-accent-primary,
  color-text-dark-primary: $color-text-dark-primary,
  color-text-light-primary: $color-text-light-primary,
  color-background-primary: $color-background-primary,
  color-background-secondary: $color-background-secondary,
);

@function generateLightVariants($colors, $factor) {
  $newColors: (
    color-text-accent-primary: set-text-color($color-text-accent-primary, lighten($color-text-accent-primary, $factor)),
    color-text-dark-primary: set-text-color($color-text-dark-primary, lighten($color-text-dark-primary, $factor)),
    color-text-light-primary: set-text-color($color-text-light-primary, lighten($color-text-light-primary, $factor)),
    color-background-primary: lighten($color-background-primary, $factor),
    color-background-secondary: lighten($color-background-secondary, $factor),
  );
  @return $newColors;
}

@function generateDarkVariants($colors, $factor) {
  $color-text-accent-primary: map-get($colors, 'color-text-accent-primary');
  $color-text-dark-primary: map-get($colors, 'color-text-dark-primary');
  $color-text-light-primary: map-get($colors, 'color-text-light-primary');
  $color-background-primary: map-get($colors, 'color-background-primary');
  $color-background-secondary: map-get($colors, 'color-background-secondary');

  $newColors: (
    color-text-accent-primary: set-text-color($color-text-accent-primary, darken($color-text-accent-primary, $factor)),
    color-text-dark-primary: set-text-color($color-text-dark-primary, darken($color-text-dark-primary, $factor)),
    color-text-light-primary: set-text-color($color-text-light-primary, darken($color-text-light-primary, $factor)),
    color-background-primary: darken($color-background-primary, $factor),
    color-background-secondary: darken($color-background-secondary, $factor),
  );
  @return $newColors;
}

$themeDarkFactor: 50%;
$themeDarkestFactor: 80%;
$themeLightFactor: 10%;
$themeLightestFactor: 35%;

$lightColors: generateLightVariants($defaultColors, $themeLightFactor);
$lightestColors: generateLightVariants($defaultColors, $themeLightestFactor);
$darkColors: generateDarkVariants($defaultColors, $themeDarkFactor);
$darkestColors: generateDarkVariants($defaultColors, $themeDarkestFactor);

$themes: (
  default: createTheme($defaultColors),
  light: createTheme($lightColors),
  lightest: createTheme($lightestColors),
  dark: createTheme($darkColors),
  darkest: createTheme($darkestColors)
);

// @debug $themes;
